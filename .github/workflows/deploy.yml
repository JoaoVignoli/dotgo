# .github/workflows/deploy.yml
name: CI/CD - Deploy da Aplicação Dotgo

on:
  push:
    branches: [ "main" ] # Aciona o workflow em cada push para a branch 'main'

# Adiciona o novo gatilho manual
  workflow_dispatch:


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      # Passo 1: Instalar o cliente cloudflared no runner
      - name: Instalar cloudflared
        run: |
          sudo wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb -O cloudflared.deb
          sudo dpkg -i cloudflared.deb

      # Passo 2: Fazer o deploy via SSH 
      - name: Deploy no servidor via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          timeout: 30s
          
          script: |
            echo "Conectado com sucesso!"
            # Se o 'cd' falhar por algum motivo, o '&&' impede que os comandos seguintes (git pull, docker-compose )
            # sejam executados no lugar errado. É uma pequena camada extra de segurança.
            cd /home/vignoli/Documentos/Projects/dotgo && \
            git pull && \
            docker-compose up -d --force-recreate --build
            
            echo "Deploy finalizado!"